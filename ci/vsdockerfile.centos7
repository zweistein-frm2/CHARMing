FROM centos:7
ENV container docker
LABEL description="Container for use with Visual Studio"


RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \
systemd-tmpfiles-setup.service ] || rm -f $i; done); \
rm -f /lib/systemd/system/multi-user.target.wants/*;\
rm -f /etc/systemd/system/*.wants/*;\
rm -f /lib/systemd/system/local-fs.target.wants/*; \
rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
rm -f /lib/systemd/system/basic.target.wants/*;\
rm -f /lib/systemd/system/anaconda.target.wants/*;

VOLUME [ "/sys/fs/cgroup" ]


RUN yum -y update

RUN export TZ=Europe/Berlin    # must be at beginning for unknown reasons,
RUN yum install tzdata   # must be at beginning for unknown reasons,

RUN yum install -y epel-release && yum repolist  && \
     rpm -ivh http://repo.okay.com.mx/centos/7/x86_64/release/okay-release-1-3.el7.noarch.rpm?

RUN yum install -y centos-sclo-rh centos-release-scl git  && \
    yum install -y python3-pip python3-devel && \
    pip3 install numpy && \
    yum install -y gtk3-devel

RUN yum install -y rsync zip openssh-clients openssh-server initscripts && yum clean all

RUN yum install -y which git devtoolset-9-gcc devtoolset-9-gcc-c++  make && \
  yum install -y cmake3  glibc-static && ln -s /usr/bin/cmake3 /usr/bin/cmake



RUN yum install -y wget dpkg
RUN wget https://forensics.cert.org/cert-forensics-tools-release-el7.rpm && \
    rpm -Uvh cert-forensics-tools-release*rpm && \
	yum --enablerepo=forensics install -y libiconv-static

RUN yum install -y rpm-build
COPY distribution/centos7/Docker/etc/yum.conf /etc/yum.conf
RUN yum reinstall -y -q glibc-common
# install build dependencies

ENV PATH=/opt/rh/devtoolset-9/root/usr/bin:$PATH

# configure SSH for communication with Visual Studio
RUN mkdir -p /var/run/sshd


RUN echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config && \
    echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && \
    echo 'root:root' | chpasswd

# expose port 22
EXPOSE 22

RUN test -f /etc/ssh/ssh_host_ecdsa_key || /usr/bin/ssh-keygen -q -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -C '' -N '' && \
    test -f /etc/ssh/ssh_host_rsa_key || /usr/bin/ssh-keygen -q -t rsa -f /etc/ssh/ssh_host_rsa_key -C '' -N '' && \
	test -f /etc/ssh/ssh_host_ed25519_key || /usr/bin/ssh-keygen -q -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -C '' -N '' &&\
	test -f /root/.ssh/id_rsa || /usr/bin/ssh-keygen -t rsa -f /root/.ssh/id_rsa -N '' && \
	test -f /root/.ssh/id_rsa.pub || ssh-keygen -y -t rsa -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub && \
	test -f /root/.ssh/authorized_keys || /usr/bin/cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys && \
	chown -R root:root /root/.ssh

RUN echo 'CC=/opt/rh/devtoolset-9/root/usr/bin/cc' >> /etc/environment && \
    echo 'CXX=/opt/rh/devtoolset-9/root/usr/bin/c++' >> /etc/environment && \
    echo 'CPLUS_INCLUDE_PATH=/usr/include/python3.6m' >> /etc/environment && \
    echo 'PACK2RPM=ON' >> /etc/environment && \
    echo 'INSTALL_DEPS=gtk3' >> /etc/environment && \
    echo "PATH=$PATH" >> /etc/environment

RUN echo '#!/bin/bash' >> entrypoint.sh && \
    echo 'ssh-keygen -A' >> entrypoint.sh && \
    echo 'exec /usr/sbin/sshd -D -e "$@"' >> entrypoint.sh && \
    chmod +x entrypoint.sh


ENTRYPOINT ["/entrypoint.sh"]












