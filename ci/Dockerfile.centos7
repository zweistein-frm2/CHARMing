FROM centos:7
ENV DEBIAN_FRONTEND=noninteractive

RUN yum -y update

RUN export TZ=Europe/Berlin    # must be at beginning for unknown reasons,
RUN yum install tzdata   # must be at beginning for unknown reasons,

RUN yum install -y epel-release && yum repolist  && \
     rpm -ivh http://repo.okay.com.mx/centos/7/x86_64/release/okay-release-1-3.el7.noarch.rpm?

RUN yum install -y centos-sclo-rh centos-release-scl git --nogpgcheck && \
    yum install -y python3-pip python3-devel --nogpgcheck && \
    pip3 install numpy && \
    yum install -y gtk3-devel --nogpgcheck

RUN yum install -y which git devtoolset-9-gcc devtoolset-9-gcc-c++ --nogpgcheck  make && \
  yum install -y cmake3  glibc-static --nogpgcheck && ln -s /usr/bin/cmake3 /usr/bin/cmake
ENV PATH=/opt/rh/devtoolset-9/root/usr/bin:$PATH

RUN yum install -y wget dpkg --nogpgcheck
RUN wget https://forensics.cert.org/cert-forensics-tools-release-el7.rpm && \
    rpm -Uvh cert-forensics-tools-release*rpm && \
	yum --enablerepo=forensics install -y libiconv-static

RUN yum install -y rpm-build --nogpgcheck

ARG projectdir=CHARMing
RUN mkdir ${projectdir}
WORKDIR /${projectdir}
COPY . .

RUN cp /${projectdir}/distribution/centos7/Docker/etc/yum.conf /etc/yum.conf
RUN yum reinstall -y -q glibc-common

WORKDIR /

RUN cd /${projectdir}/boost && rm -rf out
RUN rm -rf /${projectdir}/out

RUN cp /${projectdir}/distribution/centos7/Docker/${projectdir}/libuv/CMakeLists.txt /${projectdir}/libuv/CMakeLists.txt
# basically we do overwrite the libuv CMakeLists.txt so that libuv is not installed (not needed as we link statically to it
#RUN python3 --version && find /usr -name "pyconfig.h"

RUN export CPLUS_INCLUDE_PATH=/usr/include/python3.6m && cd ${projectdir} && \
    chmod +x initrepository.sh && ./initrepository.sh -sICONV_PATH=/usr/libiconv

ENV PACK2RPM=ON
ENV INSTALL_DEPS=gtk3,gcc10-libstdc++-devel
ENV LINUX_FLAVOUR=centos7

RUN export CPLUS_INCLUDE_PATH=/usr/include/python3.6m && cd /${projectdir}/entangle-charming  && rm -rf out && mkdir out && cd out && cmake .. && make
RUN mkdir out && cd out  && cmake -B /out -S /${projectdir}
RUN  mkdir package && cd out &&  make package && mv *.rpm /package

RUN yum install -y ftp
RUN cd /${projectdir}/distribution && chmod +x packageout.sh  && chmod +x ftpout.sh  && ./packageout.sh








